import tkinter as tk
from tkinter import messagebox, simpledialog, filedialog
import json
from tkinter import ttk

# Initialize an empty recipe dictionary to store data in memory
recipes = {}

# Function to add a new recipe
def open_form():
    def submit_form():
        recipe_name = recipe_name_entry.get()
        ingredients = ingredients_entry.get("1.0", tk.END).strip()
        instructions = instructions_entry.get("1.0", tk.END).strip()
        rating = rating_entry.get()

        if recipe_name and ingredients and instructions and rating:
            recipes[recipe_name] = {
                "recipe_name": recipe_name,
                "ingredients": ingredients,
                "instructions": instructions,
                "rating": int(rating)
            }
            update_recipe_list()
            res = recipes[recipe_name]
            # add_to_database(res)
            form_window.destroy()

    form_window = tk.Toplevel()
    form_window.title("Recipe Form")
    form_window.geometry("600x400")

    recipe_name_label = tk.Label(form_window, text="Recipe Name:")
    recipe_name_label.pack()
    recipe_name_entry = tk.Entry(form_window)
    recipe_name_entry.pack()

    ingredients_frame = tk.Frame(form_window, highlightbackground="gray", highlightthickness=1)
    ingredients_frame.pack(pady=5)
    ingredients_label = tk.Label(ingredients_frame, text="Ingredients:")
    ingredients_label.pack()
    ingredients_entry = tk.Text(ingredients_frame, height=5, width=40, bd=0)
    ingredients_entry.pack()

    instructions_frame = tk.Frame(form_window, highlightbackground="gray", highlightthickness=1)
    instructions_frame.pack(pady=5)
    instructions_label = tk.Label(instructions_frame, text="Instructions:")
    instructions_label.pack()
    instructions_entry = tk.Text(instructions_frame, height=5, width=40, bd=0)
    instructions_entry.pack()

    rating_label = tk.Label(form_window, text="Rating (1-5):")
    rating_label.pack()
    rating_entry = tk.Entry(form_window)
    rating_entry.pack()

    submit_button = tk.Button(form_window, text="Submit", command=submit_form)
    submit_button.pack()

# Function to update the recipe list in the GUI
def add_recipe():
    open_form()

def update_recipe_list():
    recipe_list.delete(0, tk.END)
    for recipe_name in recipes:
        recipe_list.insert(tk.END, recipe_name)

def delete_recipe():
    recipe_name = recipe_list.get(tk.ACTIVE)  
    if recipe_name:
        recipe_details = recipes.get(recipe_name)
        if recipe_details:
            confirm = messagebox.askyesno(
            "Confirm Deletion", f"Do you want to delete the recipe '{recipe_name}'?")
            if confirm:
                del recipes[recipe_name]
                del_from_database()
                update_recipe_list()
        else:
            messagebox.showerror("Error", "Recipe not found.")
    else:
        messagebox.showerror("Error", "Please select a recipe to view.")

def del_from_database():
    with open("test.json", "r") as data_file:
        data = json.load(data_file)
    data = recipes
    with open("test.json", "w") as data_file:
        json.dump(data, data_file, indent=4)

def import_recipes():
    file_path = filedialog.askopenfilename(
        filetypes=[("JSON files", "*.json")])
    if file_path:
        with open(file_path, 'r') as file:
            loaded_recipes = json.load(file)
            recipes.update(loaded_recipes)
            update_recipe_list()
        messagebox.showinfo("Success", "Recipes imported from JSON file.")

# Create the main window
root = tk.Tk()
root.title("Recipe Management System")
root.geometry("600x700")
root.tk.call("source", "azure.tcl")
root.tk.call("set_theme", "light")


# Create a listbox to display recipes
recipe_label = ttk.Label(root, text="Recipes List")
recipe_label.pack()
recipe_list = tk.Listbox(root, height=20, width=60)
recipe_list.pack()

#reads json
def fileReader():
    with open("test.json", "r") as file:
        recipes = json.load(file)
        if len(recipes) != 0:
            return recipes
            
# Load initial data if available (e.g., from a JSON file)
try:
    with open("Recipe_database.json", "r") as file:
        recipes = json.load(file)
        if len(recipes) != 0:
            update_recipe_list()
except FileNotFoundError:
    pass

# Create buttons for various actions
add_button = ttk.Button(root, text="Add Recipe", command=add_recipe)
view_button = ttk.Button(root, text="View Recipe")
edit_button = ttk.Button(root, text="Edit Recipe")
delete_button = ttk.Button(root, text="Delete Recipe")
export_button = ttk.Button(root, text="Export Recipes")
import_button = ttk.Button(root, text="Import Recipes", command=import_recipes)
view_button.pack(pady=5)
add_button.pack(pady=5)
edit_button.pack(pady=5)
delete_button.pack(pady=5)
export_button.pack(pady=5)
import_button.pack(pady=5)


# Apply the theme to the entire program
root.tk.call("ttk::style", "theme", "use", "azure-light")
root.mainloop()